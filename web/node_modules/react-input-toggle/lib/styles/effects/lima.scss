/**
 * Inspiration from Tony Wallstr√∂m Switch Animation
 * https://dribbble.com/shots/2327955-Switch-Animation-in-Principle
 */
// Customizable
$lima-width: 3.2em !default;
$lima-height: 2em !default;

// final enabled height
$lima-trackThickness: 1.3em !default;
$lima-trackOffTransform: scaleY(.09);
$lima-handleWidth: 1.3em !default;

// how far down the track does the handle begin at
// and how much space between the handle and the track when on
$lima-handlePad: .3em !default;
$lima-checkSize: .8em !default;
$lima-handleColorOff: rgb(210,210,210) !default;
$lima-handleColorOn: rgb(255,255,255) !default;
$lima-trackColorDisabled: rgb(196,196,196) !default;
$lima-trackColorOn: rgb(40,166,38) !default;
$lima-trackColorOff: $lima-trackColorOn !default;
$lima-transitionTrack: all 400ms cubic-bezier(.215, .610, .355, 1.000) !default;
$lima-transitionHandle: all 500ms cubic-bezier(.165, .840, .440, 1.000), opacity 100ms ease !default;

// Computed
$lima-handleHeight: $lima-trackThickness - $lima-handlePad;
$lima-handleStart: $lima-handlePad * 1.5;
$lima-handleEnd: $lima-width - $lima-handleWidth - $lima-handlePad;
$lima-handleMiddle: $lima-height /2 - $lima-handleHeight / 2;
$lima-trackLeft: 0;
$lima-trackLength: $lima-width;
$lima-trackMiddle: $lima-height /2 - $lima-trackThickness / 2;

.rt-toggle--lima {
  
  // making sure our toggle doesnt compress in
  min-width: $lima-width;
  
  // Bring in our background so we can match it later
  background-color: inherit;
}

// Look and feel for on focus or hover, but only for when not checked
.rt-toggle--lima:not(.rt-toggle--disabled):not(.rt-toggle--checked) {
  &.rt-toggle--focused,
  .rt-toggle__container--lima:hover {
    .rt-lima__track {
      
      // animation-name: lima-color-pluse;
      // animation-duration: 2s;
      // animation-iteration-count: infinite;
      // animation-fill-mode: both;
    }

    .rt-lima__handle {
      box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
    }
  }
}

// Look and feel for on foucs or hover when checked
.rt-toggle--lima:not(.rt-toggle--disabled).rt-toggle--checked {
  &.rt-toggle--focused,
  .rt-toggle__container--lima:hover {
    .rt-lima__track {
      border-width: .1em;
      border-style: solid;
      animation-name: lima-border-pluse;
      animation-duration: 2s;
      animation-iteration-count: infinite;
      animation-fill-mode: both;
    }

    .rt-lima__handle {
      box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
    }
  }
}

.rt-toggle--lima.rt-toggle--disabled {
  .rt-lima__track {
    background-color: $lima-trackColorDisabled;
  }
}

.rt-toggle__container--lima {
  width: $lima-width;
  height: $lima-height;
  margin-left: .5em;
  margin-right: .5em;
}

.rt-lima__track,
.rt-lima__check,
.rt-lima__handle,
.rt-lima__handle--container,
.rt-lima__handle--border {
  position: absolute;
}

.rt-lima__track {
  top: $lima-trackMiddle;
  left: $lima-trackLeft;
  width: $lima-trackLength;
  height: $lima-trackThickness;
  background-color: $lima-trackColorOff;
  transition: $lima-transitionTrack;
  transform: $lima-trackOffTransform;
  transform-origin: 50% 50%;
  border-radius: 2px;
}

// Positioning
// Look
// set up inital values for transitions
.rt-lima__handle--container {
  top: $lima-handleMiddle;
  left: $lima-handleStart;
  width: $lima-handleWidth;
  height: $lima-handleHeight;
  background-color: inherit;
  transition: $lima-transitionHandle;
  border-radius: $lima-trackThickness;
}

.rt-lima__handle,
.rt-lima__handle--border {
  top: 0;
  left: 0;
  width: $lima-handleWidth;
  height: $lima-handleHeight;
  transition: $lima-transitionHandle;
  border-radius: $lima-trackThickness;
}

.rt-lima__handle--border {
  background-color: inherit;
}

.rt-lima__handle {
  background-color: $lima-handleColorOff;
  box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
}

.rt-lima__handle--border {
  width: $lima-handleWidth + $lima-handlePad;
  height: $lima-handleHeight + $lima-handlePad;
  margin-top: -$lima-handlePad / 2;
  margin-left: -$lima-handlePad / 2;
}

.rt-lima__check {
  position: absolute;
  top: $lima-handlePad * 2;
  left: $lima-handlePad * 2;
  width: $lima-checkSize;
  transition: $lima-transitionTrack;
  transform: scale(0.2);
  
  path {
    fill: $lima-handleColorOn;
  }
}

.rt-toggle__input--lima:checked {
  & ~ .rt-lima__track {
    transform: scaleY(1);
    border-radius: $lima-trackThickness;
    background-color: $lima-trackColorOn;
  }

  & ~ .rt-lima__check {
    transform: scale(1);
  }

  & ~ .rt-lima__handle--container {
    left: $lima-handleEnd;
    
    .rt-lima__handle--border {
      opacity: 0;
    }

    .rt-lima__handle {
      background-color: $lima-handleColorOn;
    }
  }
}

@keyframes lima-color-pluse {
  from {
    background-color: $lima-trackColorOn;
  }

  50% {
    background-color: $lima-trackColorDisabled;
  }

  to {
    background-color: $lima-trackColorOn;
  }
}

@keyframes lima-border-pluse {
  from {
    border-color: $lima-trackColorOn;
  }

  50% {
    border-color: $lima-handleColorOn;
  }

  to {
    border-color: $lima-trackColorOn;
  }
}
