/**
 * Original Design: Mark Lamb

 * URL: https://dribbble.com/shots/2326459-Toggle-Switch
 * Notes:
 *   This style relies on a parent element which either has its background set to a color, or inheirts from its parent.
 *   So if the handlePad is whack it means the parent has not set or inheirited the background.
 */
// Customizable
$skeleton-width: 5.5em !default;
$skeleton-height: 2em !default;
$skeleton-trackThickness: .4em !default;
$skeleton-handleSize: 2em !default;
$skeleton-handlePad: .4em !default;
$skeleton-handleThickness: .4em !default;
$skeleton-handleColorOff: rgba(170,170,170,.3) !default;
$skeleton-handleColorOn: rgb(255,255,255) !default;
$skeleton-trackColorOff: rgba(170,170,170,.3) !default;
$skeleton-trackColorOn: rgba(170,170,170,.3) !default;
$skeleton-transition: all 450ms cubic-bezier(.845, .2, .2, .845) !default;

// Computed
$skeleton-handleStart: $skeleton-handlePad;
$skeleton-handleEnd: $skeleton-width - $skeleton-handleSize - $skeleton-handlePad;
$skeleton-handleMiddle: $skeleton-height /2 - $skeleton-handleSize / 2;
$skeleton-trackLeft: $skeleton-handleSize/2;
$skeleton-trackLength: $skeleton-width - $skeleton-trackLeft*2;
$skeleton-trackMiddle: $skeleton-height /2 - $skeleton-trackThickness / 2;

.rt-toggle--skeleton {
  
  // making sure our toggle doesnt compress in
  min-width: $skeleton-width;
  
  // Bring in our background so we can match it later
  background-color: inherit;
}

.rt-toggle__container--skeleton {
  width: $skeleton-width;
  height: $skeleton-height;
  
  &:hover,
  .rt-toggle--focused & {
    .rt-skeleton__handle--container,
     {
      animation-name: pulse-handle;
      animation-duration: 2s;
      animation-iteration-count: infinite;
      animation-fill-mode: both;
      
      .rt-skeleton__handle {
        animation-name: skeleton-pulse;
        animation-duration: 2s;
        animation-iteration-count: infinite;
        animation-fill-mode: both;
      }
    }
  }
}

.rt-skeleton__track,
.rt-skeleton__handle,
.rt-skeleton__handle--container,
.rt-skeleton__handle--border,
.rt-skeleton__handle--inner {
  position: absolute;
}

.rt-skeleton__track {
  
  // Positioning
  top: $skeleton-trackMiddle;
  left: $skeleton-trackLeft;
  width: $skeleton-trackLength;
  height: $skeleton-trackThickness;
  transition: $skeleton-transition;
  border-radius: $skeleton-trackThickness / 1.5;
  background-color: $skeleton-trackColorOff;
}

// Positioning
// Look
// set up inital values for transitions
.rt-skeleton__handle--container {
  top: $skeleton-handleMiddle;
  left: $skeleton-handleStart;
  width: $skeleton-handleSize;
  height: $skeleton-handleSize;
  background-color: inherit;
  transition: $skeleton-transition;
}

.rt-skeleton__handle,
.rt-skeleton__handle--inner,
.rt-skeleton__handle--border {
  top: 0;
  left: 0;
  width: $skeleton-handleSize;
  height: $skeleton-handleSize;
  transition: $skeleton-transition;
  border-radius: 50%;
}

.rt-skeleton__handle--border,
.rt-skeleton__handle--inner {
  background-color: inherit;
}

.rt-skeleton__handle {
  background-color: $skeleton-handleColorOff;
}

.rt-skeleton__handle--inner {
  
  // transform: scale(0.8);
  width: $skeleton-handleSize - $skeleton-handleThickness;
  height: $skeleton-handleSize - $skeleton-handleThickness;
  margin-top: +$skeleton-handleThickness / 2;
  margin-left: +$skeleton-handleThickness / 2;
}

.rt-skeleton__handle--border {
  
  // transform: scale(1.2);
  width: $skeleton-handleSize + $skeleton-handlePad;
  height: $skeleton-handleSize + $skeleton-handlePad;
  margin-top: -$skeleton-handlePad / 2;
  margin-left: -$skeleton-handlePad / 2;
}

.rt-toggle__input--skeleton:checked {
  & ~ .rt-skeleton__track {
    
    // stays the same
  }

  & ~ .rt-skeleton__handle--container {
    left: $skeleton-handleEnd;
    
    .rt-skeleton__handle--inner {
      transform: scale(0);
    }

    .rt-skeleton__handle {
      background-color: $skeleton-handleColorOn;
    }
  }
}

@keyframes pulse-handle {
  from {
    transform: scale3d(1, 1, 1);
  }

  50% {
    transform: scale3d(1.05, 1.05, 1.05);
  }

  to {
    transform: scale3d(1, 1, 1);
  }
}

@keyframes skeleton-pulse {
  from {
    background-color: $skeleton-handleColorOff;
  }

  50% {
    background-color: $skeleton-handleColorOn;
  }

  to {
    background-color: $skeleton-handleColorOff;
  }
}
